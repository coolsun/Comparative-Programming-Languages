head	1.76;
access;
symbols;
locks;
comment	@.\" @;


1.76
date	2014.10.03.23.35.04;	author -;	state -;
branches;
next	1.75;

1.75
date	2014.10.03.23.34.26;	author -;	state -;
branches;
next	1.74;

1.74
date	2014.08.09.00.00.21;	author -;	state -;
branches;
next	1.73;

1.73
date	2014.08.08.23.59.31;	author -;	state -;
branches;
next	1.72;

1.72
date	2012.01.13.21.46.36;	author -;	state -;
branches;
next	1.71;

1.71
date	2012.01.11.04.00.00;	author -;	state -;
branches;
next	1.70;

1.70
date	2011.12.21.05.35.26;	author -;	state -;
branches;
next	1.69;

1.69
date	2011.12.21.05.33.48;	author -;	state -;
branches;
next	1.68;

1.68
date	2011.12.21.01.49.03;	author -;	state -;
branches;
next	1.67;

1.67
date	2011.12.21.01.46.34;	author -;	state -;
branches;
next	1.66;

1.66
date	2011.12.21.01.44.30;	author -;	state -;
branches;
next	1.65;

1.65
date	2011.12.21.01.43.19;	author -;	state -;
branches;
next	1.64;

1.64
date	2011.12.21.01.39.15;	author -;	state -;
branches;
next	1.63;

1.63
date	2011.12.21.01.32.50;	author -;	state -;
branches;
next	1.62;

1.62
date	2011.12.21.01.25.14;	author -;	state -;
branches;
next	1.61;

1.61
date	2011.12.21.01.23.28;	author -;	state -;
branches;
next	1.60;

1.60
date	2011.12.21.01.20.22;	author -;	state -;
branches;
next	1.59;

1.59
date	2011.12.21.01.11.21;	author -;	state -;
branches;
next	1.58;

1.58
date	2011.12.21.01.09.12;	author -;	state -;
branches;
next	1.57;

1.57
date	2011.12.20.04.08.13;	author -;	state -;
branches;
next	1.56;

1.56
date	2011.12.20.03.06.13;	author -;	state -;
branches;
next	1.55;

1.55
date	2011.12.20.03.03.20;	author -;	state -;
branches;
next	1.54;

1.54
date	2011.12.16.02.55.22;	author -;	state -;
branches;
next	1.53;

1.53
date	2011.12.16.02.53.04;	author -;	state -;
branches;
next	1.52;

1.52
date	2011.12.16.02.52.45;	author -;	state -;
branches;
next	1.51;

1.51
date	2011.12.16.02.51.02;	author -;	state -;
branches;
next	1.50;

1.50
date	2011.12.16.02.50.19;	author -;	state -;
branches;
next	1.49;

1.49
date	2011.12.16.02.24.38;	author -;	state -;
branches;
next	1.48;

1.48
date	2011.12.16.02.24.16;	author -;	state -;
branches;
next	1.47;

1.47
date	2011.12.16.02.21.46;	author -;	state -;
branches;
next	1.46;

1.46
date	2011.12.16.02.21.01;	author -;	state -;
branches;
next	1.45;

1.45
date	2011.12.16.02.16.47;	author -;	state -;
branches;
next	1.44;

1.44
date	2011.03.30.03.19.41;	author -;	state -;
branches;
next	1.43;

1.43
date	2011.03.30.03.19.12;	author -;	state -;
branches;
next	1.42;

1.42
date	2011.03.30.03.17.30;	author -;	state -;
branches;
next	1.41;

1.41
date	2011.03.30.03.16.21;	author -;	state -;
branches;
next	1.40;

1.40
date	2011.03.30.03.11.54;	author -;	state -;
branches;
next	1.39;

1.39
date	2011.03.25.02.46.00;	author -;	state -;
branches;
next	1.38;

1.38
date	2011.03.25.01.48.12;	author -;	state -;
branches;
next	1.37;

1.37
date	2011.03.25.01.47.06;	author -;	state -;
branches;
next	1.36;

1.36
date	2011.03.25.01.46.28;	author -;	state -;
branches;
next	1.35;

1.35
date	2011.03.25.01.46.06;	author -;	state -;
branches;
next	1.34;

1.34
date	2011.03.25.01.45.48;	author -;	state -;
branches;
next	1.33;

1.33
date	2011.03.25.01.44.08;	author -;	state -;
branches;
next	1.32;

1.32
date	2011.03.25.01.07.41;	author -;	state -;
branches;
next	1.31;

1.31
date	2011.03.25.01.06.58;	author -;	state -;
branches;
next	1.30;

1.30
date	2011.03.25.01.06.36;	author -;	state -;
branches;
next	1.29;

1.29
date	2011.03.25.01.06.01;	author -;	state -;
branches;
next	1.28;

1.28
date	2011.03.25.01.05.28;	author -;	state -;
branches;
next	1.27;

1.27
date	2011.03.25.01.05.07;	author -;	state -;
branches;
next	1.26;

1.26
date	2011.03.25.01.04.30;	author -;	state -;
branches;
next	1.25;

1.25
date	2011.03.25.01.03.47;	author -;	state -;
branches;
next	1.24;

1.24
date	2011.03.25.01.03.36;	author -;	state -;
branches;
next	1.23;

1.23
date	2011.03.25.01.03.03;	author -;	state -;
branches;
next	1.22;

1.22
date	2011.03.25.01.02.37;	author -;	state -;
branches;
next	1.21;

1.21
date	2011.03.25.01.02.27;	author -;	state -;
branches;
next	1.20;

1.20
date	2011.03.25.01.02.18;	author -;	state -;
branches;
next	1.19;

1.19
date	2011.03.25.01.00.08;	author -;	state -;
branches;
next	1.18;

1.18
date	2011.03.25.00.59.49;	author -;	state -;
branches;
next	1.17;

1.17
date	2011.03.25.00.59.12;	author -;	state -;
branches;
next	1.16;

1.16
date	2011.03.25.00.58.55;	author -;	state -;
branches;
next	1.15;

1.15
date	2011.03.25.00.58.06;	author -;	state -;
branches;
next	1.14;

1.14
date	2011.03.25.00.56.51;	author -;	state -;
branches;
next	1.13;

1.13
date	2011.03.25.00.56.35;	author -;	state -;
branches;
next	1.12;

1.12
date	2011.03.25.00.56.07;	author -;	state -;
branches;
next	1.11;

1.11
date	2011.03.25.00.49.28;	author -;	state -;
branches;
next	1.10;

1.10
date	2011.03.25.00.47.50;	author -;	state -;
branches;
next	1.9;

1.9
date	2011.03.25.00.42.17;	author -;	state -;
branches;
next	1.8;

1.8
date	2011.03.25.00.41.27;	author -;	state -;
branches;
next	1.7;

1.7
date	2011.03.25.00.31.00;	author -;	state -;
branches;
next	1.6;

1.6
date	2011.03.25.00.29.37;	author -;	state -;
branches;
next	1.5;

1.5
date	2011.03.25.00.27.37;	author -;	state -;
branches;
next	1.4;

1.4
date	2011.03.24.23.52.36;	author -;	state -;
branches;
next	1.3;

1.3
date	2011.03.24.23.52.25;	author -;	state -;
branches;
next	1.2;

1.2
date	2008.11.26.02.28.13;	author -;	state -;
branches;
next	1.1;

1.1
date	2008.11.26.02.21.07;	author -;	state -;
branches;
next	;


desc
@@


1.76
log
@-
@
text
@.so Tmac.mm-etc
.if t .Newcentury-fonts
.INITR* \n[.F]
.SIZE 12 14
.TITLE CMPS-112 Fall\~2014 Program\~1 "Perl and Rapid Development"
.RCS "$Id: asg1-perl-pmake.mm,v 1.75 2014-10-03 16:34:26-07 - - $"
.PWD
.URL
.GETST* SIGTOPERL_C Figure_SIGTOPERL_C
.GETST* SIGTOPERL_OUTPUT1 Figure_SIGTOPERL_OUTPUT1
.H 1 "Overview"
Scripting is a style of programming whereby small programs 
are developed rapidly.
This is also sometimes called rapid prototyping.
Perl is a language which supports this particular programming
paradigm very well because it is a very powerful and interpreted
language.
There is no need to do the usual compile-run cycle, since
the program is compiled every time it is run.
.P
One might claim that Perl is probably the best language for
the job in almost any instance where the program can be written in,
say, about an hour or less, and where the performance is not
unacceptable.
For large applications or those which require high performance,
it is not suitable.
Perl's most notable powerful features are powerful string manipulation
facilities, pattern matching, and hash tables as primitive elements.
.H 1 "An implementation of make"
In this assignment, you will use Perl to write a replacement for
a subset of
.V= gmake .
.SH=BVL
.B=LI "NAME"
pmake \[em] perl implementation of gmake
.B=LI "SYNOPSIS"
.V= pmake
.=V \|[ -d ]
.=V \|[ -n ]
.=V \|[ -f
.IR makefile ]
.RI \|[ target ]
.B=LI "DESCRIPTION"
The
.V= pmake
utility executes a list of shell commands associated with each
.IR target ,
typically to create or update files of the same name.
The
.IR Makefile
contains entries that describe how to bring a target up to date with
respect to those on which it depends,
which are called prerequisites.
.B=LI "OPTIONS"
.br
The following options are supported.
All options must precede all operands,
and all options are scanned by 
.V= Getopt::Std::getopts
(perldoc).
.VL \n(Pi
.LI "\f[CB]-d\f[R]"
Displays the reasons why make chooses to rebuild a target.
This option prints debug information,
or nothing at all.
Output is readable only to the implementor.
.LI "\f[CB]-n\f[R]"
Non-execution mode.
Prints commands, but does not execute them.
.LI "\f[CB]-f\f[R]\|\f[I]Makefile\f[R]"
.br
Specifies the name of the Makefile to use.
If not specified,
tries to use 
.V= ./Makefile .
If neither of those files exists, exits with an error message.
.LE
.B=LI "OPERANDS"
The following operand is recognized.
.VL \n(Pi
.LI "\f[I]target\f[R]
.br
An attempt is made to build each target in sequence in the
order they are given on the command line.
If no target is specified, the first target in the
.IR makefile
is built.
This is usually, but not necessarily, the target
.V= all .
.LE
.B=LI "EXIT STATUS"
.VL \n[Pi]
.LI 0
No errors were detected.
.LI 1
An error in the makefile was detected,
one that did not come from the execution of a subprocess.
.LI >0
An error was detected which caused 
.V= pmake
to stop execution, because of an error return from the subprocess.
In this case, the subprocess's exit code is returned.
.LE
.br
.ne 6
.B=LI "MAKEFILE SYNTAX"
.br
Generally, whitespace delimits words,
but in addition, punctuation is recognized as well.
Each line of input is a comment, an empty line, a dependency,
or a command.
.VL \n[Pi]
.LI \f[CB]#\fR
Any line with begins with a hash, possibly preceded by whitespace
(spaces and tabs) is ignored.
Empty lines consisting only of whitespace are also ignored.
.LI
\f[I]macro\f[R]\|\f[CB]=\f[R]\|\f[I]value\f[R]
.br
Macro definitions are kept in a symbol (hash) table, 
to be substituted later.
.LI
\fItarget\fR\|.\|.\|. \f[CB]:\fR \fIprerequisite\fR\|.\|.\|.
.br
Each target's time stamp is checked against the time stamps of
each of the prerequisites.
If the target or prerequisite contains a percent sign
.=V ( % ),
it is substituted consistently.
If any target is obsolete, the following commands are executed.
A target is obsolete if it is a file that is older than the 
prerequisites or does not exist.
A prerequisite is either a file or another target.
If a file, its time stamp is checked.
If not, the target to which is refers is made recursively.
No target is made more than once.
.LI \fIcommand\fR
.br
A command is any line for which the first character is a tab .
The line is echoed to 
.V= STDOUT
before executing the command.
The line is then passed to the
.V= system
function call for execution by the shell.
The resulting exit code is then tested.
If it is non-zero, 
.V= pmake
exits at that point with that exit code.
If the tab is followed by a minus sign
.=V ( - )
and white space,
the exit code is treated as 0.
The minus sign is not passed to the shell.
.LE
.B=LI MACROS
Whenever a dollar sign appears in the input file,
it represents a macro substitution.
Macros are substituted from innermost to outermost braces.
If a dollar sign is followed by any character except a left
parenthesis
.=V ( ( )
or left brace
.=V ( { )
that one character is the macro name.
Otherwise, the contents of the parentheses or braces are replaced.
.nr Pi2 \n[Pi]*2
.VL \n[Pi2]
.LI \f[CB]\[Do]\[Do]\fR
Represents the dollar sign itself.
.LI \f[CB]\[Do]<\fR
Represents the first file specified as a prerequisite.
.LI \f[CB]\[Do]@@\fR
Represents the first file specified as a target.
.LI \f[CB]\[Do]{\fR\|.\|.\|.\|\f[CB]}\fR
The contents of the braces are substituted with the value of the
macro name, which may be multiple characters,
not including a closing brace.
.LE
.LE
.DF L
.B1
.SP
.ft CR
.nf
.eo
.pso cat -nv sigtoperl.c | expand
.ec
.fi
.ft R
.SP
.B2
.FG "\f[CB]sigtoperl.c\f[P]" "" 0 SIGTOPERL_C
.DE
.DF L
.B1
.SP
.ft CR
.nf
.eo
.pso sigtoperl | cat -nv | expand | grep -v Real-time
.ec
.fi
.ft R
.SP
.B2
.FG "Partial output from \f[CB]sigtoperl\f[P]" "" 0 SIGTOPERL_OUTPUT1
.DE
.H 1 Commentary
Here are some hints that will be useful in familiarizing yourself with
Perl and how to perform certain kinds of coding.
.ALX a ()
.LI
There are a lot of Perl scripts that may be used as examples in
the directory
.V= /afs/cats.ucsc.edu/courses/cmps112-wm/bin ,
which is a symlink to
.V= /afs/cats.ucsc.edu/courses/cmps012b-wm/bin .
.LI
The function
.V= system
will pass a comment string to the shell and set the variable
.V= \[Do]?
to the
.V= wait (2)
return value.
If the termination signal is 0 (bits 6...0),
then the program exited normally and bits 15...8 contain the
.V= exit (2)
status returned by the program.
Otherwise, bits 6...0 contain 
the signal that caused the program to terminate,
and bit 7 indicates whether or not core was dumped.
The following code can be used to extract this information\(::
.DS
.VCODE* 1 "my \[Do]term_signal = \[Do]? & 0x7F;"
.VCODE* 1 "my \[Do]core_dumped = \[Do]? & 0x80;"
.VCODE* 1 "my \[Do]exit_status = (\[Do]? >> 8) & 0xFF;"
.DE
.LI
Figure \*[Figure_SIGTOPERL_C]
shows a C program
.=V ( code/sigtoperl.c )
which prints out a description of all of the signals,
some of the output of which on this machine is shown in 
Figure \*[Figure_SIGTOPERL_OUTPUT1].
The complete output of this program may be inserted into your Perl
program.
.LI
Do
.E= not
cut and paste from the text file or the pdf.
If you use
.V= vi ,
you can insert it into your program with the command
.DS
.VCODE* 1 ".!./sigtoperl"
.DE
if the binary executable is in the current directory.
Presumably other editors have similar facilities.
.LI
Use the function
.V= system
to run the command.
.V= \[Do]?
is the
.V= wait (2)
exit status.
.LI
Keep all macros in a hash table.
.br
.ne 6
.LI
To extract the innermost macro substitution,
the following pattern will avoid nested macros\(::
.V= \[rs]\[Do]{[\(ha}]+} .
Alternately, you may wish to parse macro lines into an AST
matching braces.
Remember that regular expressions don't handle matched structures
but context free grammars do.
.br
.ne 5
.LI
Keep each target in a hash with the prerequisites and commands as a
reference to a list.
Hashes are used in Perl to represent structs.
Thus, the following will point
.V= \[Do]p
at a struct with two fields\(::
.DS
.VCODE* 1 "\[Do]p = {FOO=> 3, BAR=> [1, 2, 3]}"
.DE
.LI
The
.V= stat
function returns a list of file attributes.
The modification time is the value of interest when comparing
time stamps on files.
See
.V= perlfunc (1).
.DS
.VCODE* 1 "@@filestat = stat $filename;"
.VCODE* 1 "my $mtime = $filestat[9];"
.DE
.LI
Look at the subdirectories
.V= .score/test*
and see what 
.V= gmake
does with them.
.LE
.H 1 "What to submit"
Submit one file, specifically called
.V= pmake ,
which has been
.V= chmod ed
to executable
.=V ( +x ).
The first line must be a hashbang for Perl.
Also, use
.V= strict
and
.V= warnings .
.DS
.VCODE* 1 "#!/usr/bin/perl"
.VTCODE* 1 "# " "Your name and username@@ucsc.edu"
.VCODE* 1 "use strict;"
.VCODE* 1 "use warnings;"
.DE
.P
Your name and RCS
.V= \[Do]Id\[Do]
string must come
.E= after
the hashbang line.
Grading will be done by naming it as a shell script.
Do not run it by typing the word
.V= perl
as the first word on the command line.
.P
If you are doing pair programming, 
submit
.V= PARTNER
as required by the pair programming instructions in
.V= cmps112-wm/Syllabus/pair-programming .
.FINISH
@


1.75
log
@-
@
text
@d6 1
a6 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.74 2014-08-08 17:00:21-07 - - $"
d333 3
a335 1
string must come after the hashbang line.
@


1.74
log
@-
@
text
@d6 1
a6 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.73 2014-08-08 16:59:31-07 - - $"
d326 1
@


1.73
log
@-
@
text
@d3 2
d6 3
a8 2
.RCS "$Id: asg1-perl-pmake.mm,v 1.72 2012-01-13 13:46:36-08 - - $"
.INITR* \n[.F]
@


1.72
log
@-
@
text
@d3 2
a4 2
.TITLE CMPS-112 Winter\~2012 Program\~1 "Perl and Rapid Development"
.RCS "$Id: asg1-perl-pmake.mm,v 1.71 2012-01-10 20:00:00-08 - - $"
@


1.71
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.70 2011-12-20 21:35:26-08 - - $"
d267 1
a267 3
Keep all macros and functions in a hash table.
For functions, the hash table value should point at a
.V= sub.
@


1.70
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.69 2011-12-20 21:33:48-08 - - $"
d174 2
a175 2
macro name, which may be multiple characters.
If whitespace occurs, it is a function call.
@


1.69
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.68 2011-12-20 17:49:03-08 - - $"
d224 2
a225 2
If the termination signal is 0 (bits 6\[en]0),
then the program exited normally and bits 15\[en]8 contain the
d228 1
a228 1
Otherwise, bits 6\[en]0 contain 
@


1.68
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.67 2011-12-20 17:46:34-08 - - $"
d224 2
a225 2
If the low-order 8 bits are 0,
then the program exited normally and the high-order 8 bits contain the
d228 1
a228 1
Otherwise, the low-order 7 bits contain
d230 1
a230 1
and the bit masked by 0x80 is indicates whether or not core was dumped.
@


1.67
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.66 2011-12-20 17:44:30-08 - - $"
a7 1
.NOT_YET_FINISHED
d247 12
@


1.66
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.65 2011-12-20 17:43:19-08 - - $"
d308 10
d321 4
a324 3
.DS
.VCODE* 1 #!/usr/bin/perl
.DE
@


1.65
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.64 2011-12-20 17:39:15-08 - - $"
d90 1
a90 1
.VL \n[Pi] "" 1
d278 1
d280 1
d289 1
d292 1
d311 1
d313 1
@


1.64
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.63 2011-12-20 17:32:50-08 - - $"
d225 2
a226 1
If the low-order 8 bits are 0, then the high-order 8 bits contain the
d228 2
a229 2
status.
Otherwise the low-order 7 bits contain
d231 1
a231 1
and bit 0x80 is indicates whether or not core was dumped.
d234 3
a236 4
.ft CB
my \[Do]term_signal = \[Do]? & 0x7F;
my \[Do]core_dumped = \[Do]? & 0x80;
my \[Do]exit_status = (\[Do]? >> 8) & 0xFF;
d276 1
a276 1
.BR \[Do]p
@


1.63
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.62 2011-12-20 17:25:14-08 - - $"
d57 2
a58 1
.V= Getopt::Std::getopts (perldoc).
d228 3
a230 4
If the high-order 8 bits are 0, then the low-order 7 bits contain
the signal that caused the program to terminate.
Bit 0x80 is set to indicate that core was dumped.
Otherwise all bits are 0.
d232 6
a237 3
.VTCODE* 1 "my \[Do]term_signal = \[Do]? & 0x7F;"
.VTCODE* 1 "my \[Do]core_dumped = \[Do]? & 0x80;"
.VTCODE* 1 "my \[Do]exit_status = (\[Do]? >> 8) & 0xFF;"
@


1.62
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.61 2011-12-20 17:23:28-08 - - $"
d198 1
a198 1
.pso sigtoperl | cat -nv | expand
d227 1
a227 1
If the high-order 8 bits are 0, then the low-order 8 bits contain
d229 1
d232 2
a234 2
.VTCODE* 1 "my \[Do]core_dumped = \[Do]? & 0x80;"
.VTCODE* 1 "my \[Do]term_signal = \[Do]? & 0x7F;"
d242 2
@


1.61
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.60 2011-12-20 17:20:22-08 - - $"
d184 1
a184 1
.pso expand sigtoperl.c | sed 's/^/   /' | cat -n
d198 1
a198 1
.pso sigtoperl | sed 's/^/   /' | cat -n | segment 52 0
d204 1
a204 1
.FG "Output from \f[CB]sigtoperl\f[P]" "" 0 SIGTOPERL_OUTPUT1
@


1.60
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.59 2011-12-20 17:11:21-08 - - $"
a7 3
.GETST* SIGTOPERL_OUTPUT2 Figure_SIGTOPERL_OUTPUT2
.GETST* ERATOSTHENES_PERL Figure_ERATOSTHENES_PERL
.GETST* ISPRIME_PERL Figure_ISPRIME_PERL
d184 1
a184 1
.pso expand code/sigtoperl.c | sed 's/^/   /' | cat -n
d190 1
a190 1
.FG "\f[CB]code/sigtoperl.c\f[P]" "" 0 SIGTOPERL_C
d198 1
a198 1
.pso code/sigtoperl | sed 's/^/   /' | cat -n | code/segment 52 0
d204 1
a204 15
.FG "Output from \f[CB]code/sigtoperl\f[P]" "" 0 SIGTOPERL_OUTPUT1
.DE
.DF L
.B1
.SP
.ft CR
.nf
.eo
.pso code/sigtoperl | sed 's/^/   /' | cat -n | code/segment 52 1
.ec
.fi
.ft R
.SP
.B2
.FG "Output from \f[CB]code/sigtoperl\f[P]" "" 0 SIGTOPERL_OUTPUT2
d239 2
a240 3
the output of which on this machine is shown in 
Figures \*[Figure_SIGTOPERL_OUTPUT1]
and \*[Figure_SIGTOPERL_OUTPUT2] .
@


1.59
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.58 2011-12-20 17:09:12-08 - - $"
a5 1
.GETST* PRINTSTATUS_PERL Figure_PRINTSTATUS_PERL
a186 14
.pso expand code/printstatus.perl | sed 's/^/   /' | cat -n
.ec
.fi
.ft R
.SP
.B2
.FG "\f[CB]code/printstatus.perl\f[P]" "" 0 PRINTSTATUS_PERL
.DE
.DF L
.B1
.SP
.ft CR
.nf
.eo
d247 4
a250 2
Figure \*[Figure_PRINTSTATUS_PERL] shows some sample code from
.V= code/printstatus.perl .
@


1.58
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.57 2011-12-19 20:08:13-08 - - $"
d322 1
a322 1
Submit a file, specifically called
a332 10
In addition,
submit
.V= printstrsignals.c
and
.V= printstrsignals
from the
.V= code directory,
making sure that your program
.V= pmake
looks for the executable binary in the same directory as itself.
d337 2
a338 1
as required by the pair programming instructions.
@


1.57
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.56 2011-12-19 19:06:13-08 - - $"
a347 43
.H 1 "Irrelevant examples"
Figure \*[Figure_ERATOSTHENES_PERL]
shows a Perl program that prints out prime numbers up to a given
maximum value.
It is sourced from
.=V `` Lingua::Romana::Perligata
.BR "\[em] Perl for the XXI-imum Century" '',
by Damian Conway.
.=V [ http://www.csse.monash.edu.au/~damian/papers/HTML/Perligata.html ]
.P
Figure \*[Figure_ISPRIME_PERL] shows
a less verbose program that reads in numbers and reports on their
primality.
Source unknown.
.DF L
.B1
.SP
.ft CR
.nf
.eo
.pso expand code/eratosthenes.perl | sed 's/^/   /' | cat -n
.ec
.fi
.ft R
.SP
.B2
.FG "\f[CB]code/eratosthenes.perl\f[P]" "" 0 ERATOSTHENES_PERL
.DE
.DF L
.B1
.SP
.ft CR
.nf
.eo
.pso expand code/isprime.perl | sed 's/^/   /' | cat -n
.ec
.fi
.ft R
.SP
.B2
.FG "\f[CB]code/isprime.perl\f[P]" "" 0 ISPRIME_PERL
.DE
.bp
@


1.56
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.55 2011-12-19 19:03:20-08 - - $"
d65 1
a65 1
This option essentiall prints debug information,
d67 1
d71 1
a71 1
.LI "\f[CB]-f\f[R]\|\f[I]makefile\f[R]"
d73 1
a73 1
Specifies the name of the makefile to use.
d322 1
a322 1
Submit one file, called
d333 10
@


1.55
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.54 2011-12-15 18:55:22-08 - - $"
d12 1
@


1.54
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.53 2011-12-15 18:53:04-08 - - $"
d180 14
a193 14
.\".DF L
.\".B1
.\".SP
.\".ft CR
.\".nf
.\".eo
.\".pso expand code/printstatus.perl | sed 's/^/   /' | cat -n
.\".ec
.\".fi
.\".ft R
.\".SP
.\".B2
.\".FG "\f[CB]code/printstatus.perl\f[P]" "" 0 PRINTSTATUS_PERL
.\".DE
@


1.53
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.52 2011-12-15 18:52:45-08 - - $"
d194 14
a207 14
.\".DF L
.\".B1
.\".SP
.\".ft CR
.\".nf
.\".eo
.\".pso expand code/sigtoperl.c | sed 's/^/   /' | cat -n
.\".ec
.\".fi
.\".ft R
.\".SP
.\".B2
.\".FG "\f[CB]code/sigtoperl.c\f[P]" "" 0 SIGTOPERL_C
.\".DE
@


1.52
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.51 2011-12-15 18:51:02-08 - - $"
d214 1
a214 1
.pso code/sigtoperl | sed 's/^/   /' | cat -n | code/segment 50 0
d228 1
a228 1
.pso code/sigtoperl | sed 's/^/   /' | cat -n | code/segment 50 1
@


1.51
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.50 2011-12-15 18:50:19-08 - - $"
d214 1
a214 1
.pso code/sigtoperl | sed 's/^/   /' | cat -n | code/segment 45 0
d228 1
a228 1
.pso code/sigtoperl | sed 's/^/   /' | cat -n | code/segment 45 1
@


1.50
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.49 2011-12-15 18:24:38-08 - - $"
d208 14
a221 14
.\".DF L
.\".B1
.\".SP
.\".ft CR
.\".nf
.\".eo
.\".pso code/sigtoperl | sed 's/^/   /' | cat -n | code/segment 45 0
.\".ec
.\".fi
.\".ft R
.\".SP
.\".B2
.\".FG "Output from \f[CB]code/sigtoperl\f[P]" "" 0 SIGTOPERL_OUTPUT1
.\".DE
@


1.49
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.48 2011-12-15 18:24:16-08 - - $"
d180 42
a221 42
.DF L
.B1
.SP
.ft CR
.nf
.eo
.pso expand code/printstatus.perl | sed 's/^/   /' | cat -n
.ec
.fi
.ft R
.SP
.B2
.FG "\f[CB]code/printstatus.perl\f[P]" "" 0 PRINTSTATUS_PERL
.DE
.DF L
.B1
.SP
.ft CR
.nf
.eo
.pso expand code/sigtoperl.c | sed 's/^/   /' | cat -n
.ec
.fi
.ft R
.SP
.B2
.FG "\f[CB]code/sigtoperl.c\f[P]" "" 0 SIGTOPERL_C
.DE
.DF L
.B1
.SP
.ft CR
.nf
.eo
.pso code/sigtoperl | sed 's/^/   /' | cat -n | code/segment 45 0
.ec
.fi
.ft R
.SP
.B2
.FG "Output from \f[CB]code/sigtoperl\f[P]" "" 0 SIGTOPERL_OUTPUT1
.DE
@


1.48
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.47 2011-12-15 18:21:46-08 - - $"
d214 1
a214 1
.pso code/sigtoperl | sed 's/^/   /' | cat -n | code/segment 51 0
d228 1
a228 1
.pso code/sigtoperl | sed 's/^/   /' | cat -n | code/segment 51 1
@


1.47
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.46 2011-12-15 18:21:01-08 - - $"
d180 1
a180 1
.DS L
d194 1
a194 1
.DS L
d214 1
a214 1
.pso code/sigtoperl | sed 's/^/   /' | cat -n | code/segment 52 0
d228 1
a228 1
.pso code/sigtoperl | sed 's/^/   /' | cat -n | code/segment 52 1
@


1.46
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.45 2011-12-15 18:16:47-08 - - $"
d180 1
a180 1
.DF L
d194 1
a194 1
.DF L
@


1.45
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.44 2012-03-29 20:19:41-07 - - $"
d236 1
a236 1
.H 1 Comments
d239 1
a239 1
.ALX 1 ()
@


1.44
log
@-
@
text
@d3 2
a4 2
.TITLE CMPS-112 Spring\~2011 Program\~1 "Perl and Rapid Development"
.RCS "$Id: asg1-perl-pmake.mm,v 1.43 2011-03-29 20:19:12-07 - - $"
@


1.43
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.42 2011-03-29 20:17:30-07 - - $"
d342 1
a342 1
.BR "\[em] Perl for the XXI-imum Century '',
d349 1
@


1.42
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.41 2011-03-29 20:16:21-07 - - $"
d342 1
a342 1
.V= "\[em] Perl for the XXI-imum Century '',
@


1.41
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.40 2011-03-29 20:11:54-07 - - $"
d336 13
a377 13
.H 1 "Irrelevant examples"
Figure \*[Figure_ERATOSTHENES_PERL]
shows a Perl program that prints out prime numbers up to a given
maximum value.
It is sourced from
.=V `` Lingua::Romana::Perligata
.V= "\[em] Perl for the XXI-imum Century '',
by Damian Conway.
.=V [ http://www.csse.monash.edu.au/~damian/papers/HTML/Perligata.html ]
.P
Figure \*[Figure_ISPRIME_PERL] shows
a less verbose program that reads in numbers and reports on their
primality.
@


1.40
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.39 2011-03-24 19:46:00-07 - - $"
d10 2
d350 28
@


1.39
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.38 2011-03-24 18:48:12-07 - - $"
d334 14
@


1.38
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.37 2011-03-24 18:47:06-07 - - $"
d234 1
a234 1
.H 1 Hints
d239 6
@


1.37
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.36 2011-03-24 18:46:28-07 - - $"
d212 1
a212 1
.pso code/sigtoperl | code/segment 50 0 | sed 's/^/   /' | cat -n
d226 1
a226 1
.pso code/sigtoperl | code/segment 50 1 | sed 's/^/   /' | cat -n
@


1.36
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.35 2011-03-24 18:46:06-07 - - $"
d212 1
a212 1
.pso code/sigtoperl | code/segment 54 0 | sed 's/^/   /' | cat -n
d226 1
a226 1
.pso code/sigtoperl | code/segment 54 1 | sed 's/^/   /' | cat -n
@


1.35
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.34 2011-03-24 18:45:48-07 - - $"
d212 1
a212 1
.pso code/sigtoperl | code/segment 56 0 | sed 's/^/   /' | cat -n
d226 1
a226 1
.pso code/sigtoperl | code/segment 56 1 | sed 's/^/   /' | cat -n
@


1.34
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.33 2011-03-24 18:44:08-07 - - $"
d212 1
a212 1
.pso code/sigtoperl | code/segment 60 0 | sed 's/^/   /' | cat -n
d226 1
a226 1
.pso code/sigtoperl | code/segment 60 1 | sed 's/^/   /' | cat -n
@


1.33
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.32 2011-03-24 18:07:41-07 - - $"
d212 1
a212 1
.pso segment 60 0 code/sigtoperl | sed 's/^/   /' | cat -n
d226 1
a226 1
.pso segment 60 1 code/sigtoperl | sed 's/^/   /' | cat -n
@


1.32
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.31 2011-03-24 18:06:58-07 - - $"
d8 2
a9 1
.GETST* SIGTOPERL_OUTPUT Figure_SIGTOPERL_OUTPUT
a210 2
.nr DOWNSIZE 3
.S -\n[DOWNSIZE] -\n[DOWNSIZE]
d212 1
a212 1
.pso code/sigtoperl | sed 's/^/   /' | cat -n
a213 1
.S +\n[DOWNSIZE] +\n[DOWNSIZE]
d218 15
a232 1
.FG "Output from \f[CB]code/sigtoperl\f[P]" "" 0 SIGTOPERL_OUTPUT
d260 2
a261 1
Figure \*[Figure_SIGTOPERL_OUTPUT] .
@


1.31
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.30 2011-03-24 18:06:36-07 - - $"
d100 1
d261 2
a262 1
.ne 7
d271 1
@


1.30
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.29 2011-03-24 18:06:01-07 - - $"
d260 1
a260 1
.ne 6
@


1.29
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.28 2011-03-24 18:05:28-07 - - $"
d209 1
a209 1
.nr DOWNSIZE 2
d260 1
@


1.28
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.27 2011-03-24 18:05:07-07 - - $"
d209 2
a210 1
.S -4 -4
d214 1
a214 1
.S +4 +4
@


1.27
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.26 2011-03-24 18:04:30-07 - - $"
d209 1
a209 1
.S -2 -2
d213 1
a213 1
.S +2 +2
@


1.26
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.25 2011-03-24 18:03:47-07 - - $"
d209 1
d213 1
@


1.25
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.24 2011-03-24 18:03:36-07 - - $"
d100 1
a100 1
.ne 5
d265 1
@


1.24
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.23 2011-03-24 18:03:03-07 - - $"
d210 1
a210 1
.pso code/sigtoperl | head -50 | sed 's/^/   /' | cat -n
@


1.23
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.22 2011-03-24 18:02:37-07 - - $"
d243 1
a243 1
the first few lines of the output of which on this machine is shown in 
@


1.22
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.21 2011-03-24 18:02:27-07 - - $"
d244 1
a244 1
Figure \*[SIGTOPERL_OUTPUT] .
@


1.21
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.20 2011-03-24 18:02:18-07 - - $"
d210 1
a210 1
.pso code/sigtoperl | head -60 | sed 's/^/   /' | cat -n
@


1.20
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.19 2011-03-24 18:00:08-07 - - $"
d210 1
a210 1
.pso code/sigtoperl | head -63| sed 's/^/   /' | cat -n
@


1.19
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.18 2011-03-24 17:59:49-07 - - $"
d210 1
a210 1
.pso code/sigtoperl | sed 's/^/   /' | cat -n
d243 1
a243 1
the output of which on this machine is shown in 
a306 113
.P
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
junk junk junk junk junk junk junk junk junk junk 
@


1.18
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.17 2011-03-24 17:59:12-07 - - $"
d320 100
@


1.17
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.16 2011-03-24 17:58:55-07 - - $"
d307 13
a319 2
.bp
fooo bar
@


1.16
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.15 2011-03-24 17:58:06-07 - - $"
d100 1
@


1.15
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.14 2011-03-24 17:56:51-07 - - $"
d271 1
a271 3
.DS
.VINDENT* "\[Do]p = {FOO=> 3, BAR=> [1, 2, 3]}"
.DE
d280 2
a281 4
.DS
.VINDENT* "@@filestat = stat $filename;"
.VINDENT* "my $mtime = $filestat[9];"
.DE
@


1.14
log
@-
@
text
@d4 1
a4 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.13 2011-03-24 17:56:35-07 - - $"
d18 1
@


1.13
log
@-
@
text
@d3 2
a8 2
.TITLE CMPS-112 Spring\~2011 Program\~1 "Perl and Rapid Development"
.RCS "$Id: asg1-perl-pmake.mm,v 1.12 2011-03-24 17:56:07-07 - - $"
@


1.12
log
@-
@
text
@d8 1
a8 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.11 2011-03-24 17:49:28-07 - - $"
d309 2
@


1.11
log
@-
@
text
@d8 1
a8 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.10 2011-03-24 17:47:50-07 - - $"
a25 14
.H 1 "What to submit"
Submit one file, called
.V= pmake ,
which has been
.V= chmod ed
to executable
.=V ( +x ).
The first line must be a hashbang for Perl.
Your name and RCS
.V= \[Do]Id\[Do]
string must come after the hashbang line.
.DS
.VINDENT* #!/usr/bin/perl
.DE
d292 17
@


1.10
log
@-
@
text
@d8 1
a8 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.9 2011-03-24 17:42:17-07 - - $"
d216 14
@


1.9
log
@-
@
text
@d4 3
a6 1
.GETST* PRINTSTATUS Figure_PRINTSTATUS
d8 1
a8 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.8 2011-03-24 17:41:27-07 - - $"
d200 15
a214 1
.FG "\f[CB]code/printstatus.perl\f[P]" "" 0 PRINTSTATUS
d234 9
a242 3
See the sample code in 
.V= code/printstatus.perl 
(Figure \*[Figure_PRINTSTATUS]).
@


1.8
log
@-
@
text
@d6 1
a6 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.7 2011-03-24 17:31:00-07 - - $"
d220 1
a220 1
(Figure \*[Figure_printstatus]).
@


1.7
log
@-
@
text
@d4 1
d6 1
a6 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.6 2011-03-24 17:29:37-07 - - $"
d186 14
d218 3
a220 2
See the sample cide in 
.V= printstatus.perl .
@


1.6
log
@-
@
text
@d5 1
a5 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.5 2011-03-24 17:27:37-07 - - $"
d248 3
a250 1
Look at the tests subdirectory and see what 
@


1.5
log
@-
@
text
@d5 1
a5 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.4 2011-03-24 16:52:36-07 - - $"
a183 19
.B=LI BUGS
.br
This description is incomplete.
See the description of
.V= gmake
in
.V= /usr/sfw/share/info/make.info*
to complete the details,
but only for the specific 
.V= Makefile s
in the example subdirectories.
Note that if you use Gnu
.V= info (1)
to read this documentation,
be sure that
.V= /usr/sfw/share/info
is in your 
.V= INFOPATH
environment variable.
a184 21
.H 1 "Examples"
Your program should be compatible with 
.V= gmake
as far as it goes.
The directory 
.V= /afs/cats.ucsc.edu/courses/cmps012b-wm/
and its subdirectories contain many examples of
.V= makefile s
that can be used to test your program against.
For examples on the use of Perl, look at 
.V= /afs/cats.ucsc.edu/courses/cmps112-wm/Handouts/perl/ .
Also look in
.V= cmps012b-wm/
and check out the results of
.=V `` "find . -name '*perl*'" ''.
You may also want to look at (but do not submit) the CMPS-012M
Perl assignments.
Look in 
.V= /afs/cats.ucsc.edu/courses/cmps012b-wm/Labs-cmps012m/
for the subdirectory
.V= perl-tutorial .
@


1.4
log
@-
@
text
@d5 1
a5 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.3 2011-03-24 16:52:25-07 - - $"
a290 3
.LI
Post lots of questions to the newsgroup\(::
.V= ucsc.class.cmps112 .
@


1.3
log
@-
@
text
@d4 2
a5 2
.TITLE CMPS-112 Winter\~2009 Program\~1 "Perl and Rapid Development"
.RCS "$Id: asg1-perl-pmake.mm,v 1.2 2008-11-25 18:28:13-08 - - $"
@


1.2
log
@-
@
text
@d1 1
a1 1
.so .gmmso/Tmac.mm-etc
d5 1
a5 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.1 2008-11-25 18:21:07-08 - - $"
d210 2
a211 1
and its subdirectories contain many examples of makefiles
d215 2
a216 1
Also look in /afs/cats.ucsc.edu/courses/cmps012b-wm/
a218 1
.P
@


1.1
log
@-
@
text
@d5 1
a5 1
.RCS "$Id: asg1-perl-pmake.mm,v 1.15 2008-01-18 17:21:43-08 - - $"
d190 13
a202 2
.V= /opt/local/info/make.info*
to flesh out the details.
@
