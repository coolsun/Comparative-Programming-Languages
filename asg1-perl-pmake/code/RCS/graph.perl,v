head	1.4;
access;
symbols;
locks;
comment	@# @;


1.4
date	2014.10.10.22.54.49;	author -;	state -;
branches;
next	1.3;

1.3
date	2014.10.10.22.54.20;	author -;	state -;
branches;
next	1.2;

1.2
date	2014.10.10.22.53.37;	author -;	state -;
branches;
next	1.1;

1.1
date	2014.10.10.22.43.13;	author -;	state -;
branches;
next	;


desc
@@


1.4
log
@-
@
text
@#!/usr/bin/perl
# $Id: graph.perl,v 1.3 2014-10-10 15:54:20-07 - - $

use strict;
use warnings;
$0 =~ s|.*/||;

# Example setting up a directed graph.

my @@inputs = (
   "all : hello",
   "hello : main.o hello.o",
   "main.o : main.c hello.h",
   "hello.o : hello.c hello.h",
   "ci : Makefile main.c hello.c hello.h",
   "test : hello",
   "clean : ",
   "spotless : clean",
);

sub parse_dep ($) {
   my ($line) = @@_;
   return undef unless $line =~ m/^(\S+)\s*:\s*(.*?)\s*$/;
   my ($target, $dependency) = ($1, $2);
   my @@dependencies = split m/\s+/, $dependency;
   return $target, \@@dependencies;
}

my %graph;
for my $input (@@inputs) {
   my ($target, $deps) = parse_dep $input;
   print "$0: syntax error: $input\n" and next unless defined $target;
   $graph{$target} = $deps;
}

for my $target (keys %graph) {
   print "\"$target\"";
   my $deps = $graph{$target};
   if (not @@$deps) {
      print " has no dependencies";
   }else {
      print " depends on";
      print " \"$_\"" for @@$deps;
   }
   print "\n";
}

# Sample output:
# "test" depends on "hello"
# "clean" has no dependencies
# "all" depends on "hello"
# "main.o" depends on "main.c" "hello.h"
# "ci" depends on "Makefile" "main.c" "hello.c" "hello.h"
# "hello.o" depends on "hello.c" "hello.h"
# "spotless" depends on "clean"
# "hello" depends on "main.o" "hello.o"
@


1.3
log
@-
@
text
@d2 1
a2 1
# $Id: graph.perl,v 1.2 2014-10-10 15:53:37-07 - - $
d48 9
@


1.2
log
@-
@
text
@d2 1
a2 1
# $Id: graph.perl,v 1.1 2014-10-10 15:43:13-07 - - $
a19 1
print "Input: \"$_\"\n" for @@inputs;
d47 1
@


1.1
log
@-
@
text
@d2 1
a2 1
# $Id$
d11 8
a18 8
   qw (all : hello),
   qw (hello : main.o hello.o),
   qw (main.o : main.c hello.h),
   qw (hello.o : hello.c hello.h),
   qw (ci : Makefile main.c hello.c hello.h),
   qw (test : hello),
   qw (clean : ),
   qw (spotless : clean),
d20 1
d33 1
a33 1
   print "$0: syntax error: $input\n" and nex unless defined $target;
d38 9
a46 1
   print $target, " : ", $graph{target}, "\n";
@
